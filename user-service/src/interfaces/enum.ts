export enum HttpStatusMessage {
    CONTINUE = 'CONTINUE',
    SWITCHING_PROTOCOLS = 'SWITCHING_PROTOCOLS',
    PROCESSING = 'PROCESSING',
    EARLYHINTS = 'EARLYHINTS',
    OK = 'OK',
    CREATED = 'CREATED',
    ACCEPTED = 'ACCEPTED',
    NON_AUTHORITATIVE_INFORMATION = 'NON_AUTHORITATIVE_INFORMATION',
    NO_CONTENT = 'NO_CONTENT',
    RESET_CONTENT = 'RESET_CONTENT',
    PARTIAL_CONTENT = 'PARTIAL_CONTENT',
    AMBIGUOUS = 'AMBIGUOUS',
    MOVED_PERMANENTLY = 'MOVED_PERMANENTLY',
    FOUND = 'FOUND',
    SEE_OTHER = 'SEE_OTHER',
    NOT_MODIFIED = 'NOT_MODIFIED',
    TEMPORARY_REDIRECT = 'TEMPORARY_REDIRECT',
    PERMANENT_REDIRECT = 'PERMANENT_REDIRECT',
    BAD_REQUEST = 'BAD_REQUEST',
    UNAUTHORIZED = 'UNAUTHORIZED',
    PAYMENT_REQUIRED = 'PAYMENT_REQUIRED',
    FORBIDDEN = 'FORBIDDEN',
    NOT_FOUND = 'NOT_FOUND',
    METHOD_NOT_ALLOWED = 'METHOD_NOT_ALLOWED',
    NOT_ACCEPTABLE = 'NOT_ACCEPTABLE',
    PROXY_AUTHENTICATION_REQUIRED = 'PROXY_AUTHENTICATION_REQUIRED',
    REQUEST_TIMEOUT = 'REQUEST_TIMEOUT',
    CONFLICT = 'CONFLICT',
    GONE = 'GONE',
    LENGTH_REQUIRED = 'LENGTH_REQUIRED',
    PRECONDITION_FAILED = 'PRECONDITION_FAILED',
    PAYLOAD_TOO_LARGE = 'PAYLOAD_TOO_LARGE',
    URI_TOO_LONG = 'URI_TOO_LONG',
    UNSUPPORTED_MEDIA_TYPE = 'UNSUPPORTED_MEDIA_TYPE',
    REQUESTED_RANGE_NOT_SATISFIABLE = 'REQUESTED_RANGE_NOT_SATISFIABLE',
    EXPECTATION_FAILED = 'EXPECTATION_FAILED',
    I_AM_A_TEAPOT = 'I_AM_A_TEAPOT',
    MISDIRECTED = 'MISDIRECTED',
    UNPROCESSABLE_ENTITY = 'UNPROCESSABLE_ENTITY',
    FAILED_DEPENDENCY = 'FAILED_DEPENDENCY',
    PRECONDITION_REQUIRED = 'PRECONDITION_REQUIRED',
    TOO_MANY_REQUESTS = 'TOO_MANY_REQUESTS',
    INTERNAL_SERVER_ERROR = 'INTERNAL_SERVER_ERROR',
    NOT_IMPLEMENTED = 'NOT_IMPLEMENTED',
    BAD_GATEWAY = 'BAD_GATEWAY',
    SERVICE_UNAVAILABLE = 'SERVICE_UNAVAILABLE',
    GATEWAY_TIMEOUT = 'GATEWAY_TIMEOUT',
    HTTP_VERSION_NOT_SUPPORTED = 'HTTP_VERSION_NOT_SUPPORTED',
    ACCOUNT_DELETED = 'ACCOUNT_DELETED',
    ACCOUNT_INACTIVE = 'ACCOUNT_INACTIVE',
    ACCOUNT_LOCKED = 'ACCOUNT_LOCKED',
    DEFAULT_MESSAGE = 'DEFAULT_MESSAGE'
}

export enum HttpStatusCode {
    CONTINUE = 100,
    SWITCHING_PROTOCOLS = 101,
    PROCESSING = 102,
    EARLYHINTS = 103,
    OK = 200,
    CREATED = 201,
    ACCEPTED = 202,
    NON_AUTHORITATIVE_INFORMATION = 203,
    NO_CONTENT = 204,
    RESET_CONTENT = 205,
    PARTIAL_CONTENT = 206,
    AMBIGUOUS = 300,
    MOVED_PERMANENTLY = 301,
    FOUND = 302,
    SEE_OTHER = 303,
    NOT_MODIFIED = 304,
    TEMPORARY_REDIRECT = 307,
    PERMANENT_REDIRECT = 308,
    BAD_REQUEST = 400,
    UNAUTHORIZED = 401,
    PAYMENT_REQUIRED = 402,
    FORBIDDEN = 403,
    NOT_FOUND = 404,
    METHOD_NOT_ALLOWED = 405,
    NOT_ACCEPTABLE = 406,
    PROXY_AUTHENTICATION_REQUIRED = 407,
    REQUEST_TIMEOUT = 408,
    CONFLICT = 409,
    GONE = 410,
    LENGTH_REQUIRED = 411,
    PRECONDITION_FAILED = 412,
    PAYLOAD_TOO_LARGE = 413,
    URI_TOO_LONG = 414,
    UNSUPPORTED_MEDIA_TYPE = 415,
    REQUESTED_RANGE_NOT_SATISFIABLE = 416,
    EXPECTATION_FAILED = 417,
    I_AM_A_TEAPOT = 418,
    MISDIRECTED = 421,
    UNPROCESSABLE_ENTITY = 422,
    FAILED_DEPENDENCY = 424,
    PRECONDITION_REQUIRED = 428,
    TOO_MANY_REQUESTS = 429,
    INTERNAL_SERVER_ERROR = 500,
    NOT_IMPLEMENTED = 501,
    BAD_GATEWAY = 502,
    SERVICE_UNAVAILABLE = 503,
    GATEWAY_TIMEOUT = 504,
    HTTP_VERSION_NOT_SUPPORTED = 505
}

export enum ENV {
    DEV = 'dev',
    STAGING = 'staging',
    PROD = 'prod',
    LOCAL = 'local'
}

export enum SecretName {
    DEV = 'toki/dev/secret',
    STAGING = 'toki/dev/secret',
    PROD = 'toki/dev/secret',
    LOCAL = 'toki/local/secret'
}

export enum VerificationType {
    SIGN_UP = 1,
    FORGET_PASSWORD = 2,
    LOGIN = 3
}

export enum VerificationCodeStatus {
    ACTIVE = 1,
    IN_ACTIVE = 0
}

export enum MongoChangeStreamOperationType {
    INSERT = 'insert',
    DELETE = 'delete',
    REPLACE = 'replace',
    UPDATE = 'update',
    DROP = 'drop',
    RENAME = 'rename',
    DROP_DATABASE = 'dropDatabase',
    INVALIDATE = 'invalidate'
}

export enum UserAccountStatus {
    INACTIVE = 0,
    ACTIVE = 1,
    LOGIN_LOCKED = 2
}

export enum MFAServices {
    EMAIL = 2,
    SMS = 1
}

export enum VerificationService {
    AWS_COGNITO = 1,
    CUSTOM = 2
}

export enum AuthStrategy {
    BASIC = 'Basic',
    BEARER = 'Bearer'
}

export enum DeviceType {
    IOS = 'IOS',
    ANDROID = 'ANDROID'
}

export enum DeviceTypeWithWeb {
    IOS = 'IOS',
    ANDROID = 'ANDROID',
    WEB = 'WEB'
}

export enum BackupFrequency {
    DAILY = 'DAILY',
    WEEKLY = 'WEEKLY',
    MONTHLY = 'MONTHLY',
    ON_TAP = 'ON_TAP',
    NEVER = 'NEVER'
}

export enum WalletType {
    NONE = 'NONE',
    SILVER = 'SILVER',
    ONMERCHANT = 'ONMERCHANT',
    GOLD = 'GOLD'
}

export enum Identifier {
    NATIONAL_ID = 'NATIONAL_ID',
    DRIVER_LICENSE = 'DRIVER_LICENSE',
    NAME_CARD = 'NAME_CARD',
    FOREIGN_PASSPORT = 'FOREIGN_PASSPORT',
    BIRTH_CERTIFICATE = 'BIRTH_CERTIFICATE',
    VACCINE_CERTIFICATE = 'VACCINE_CERTIFICATE',
    STUDENT_ID = 'STUDENT_ID',
    SIGN_CONTRACT = 'SIGN_CONTRACT',
    DMC_SIGN_PDF = 'DMC_SIGN_PDF',
    LEND_SIGN_PDF = 'LEND_SIGN_PDF'
}

export enum AddressFromType {
    DAN = 'DAN',
    UNITEL = 'UNITEL',
    USER = 'USER'
}

export enum Language {
    EN = 'en',
    MN = 'mn',
    HI = 'hi'
}

export enum UserStatus {
    ACTIVE = 'ACTIVE',
    BLOCKED = 'BLOCKED',
    DELETED = 'DELETED'
}

export enum UserPresence {
    ONLINE = 'ONLINE',
    OFFLINE = 'OFFLINE'
}

export enum KYCType {
    KHUR = 'KHUR',
    DAN = 'DAN',
    ADMIN = 'ADMIN',
    UNITEL = 'UNITEL'
}

export enum KYCAdminAction {
    INCOMPLETED = 'INCOMPLETED',
    ADMIN_APPROVED = 'ADMIN_APPROVED',
    ADMIN_REJECTED = 'ADMIN_REJECTED'
}

export enum KYCStatus {
    COMPLETED = 'COMPLETED',
    INCOMPLETED = 'INCOMPLETED',
    ADMIN_APPROVED = 'ADMIN_APPROVED',
    ADMIN_REJECTED = 'ADMIN_REJECTED'
}

export enum KYCWalletInfo {
    MATCHING = 'MATCHING',
    TOUPDATE = 'TO UPDATE'
}

export enum QRType {
    USER = 'USER',
    GROUP = 'GROUP',
    PAYMENT = 'PAYMENT'
}

export enum ValidationType {
    LOGIN = 'LOGIN',
    VERIFY_OTP = 'VERIFY_OTP',
    FORGET_PASSWORD = 'FORGET_PASSWORD',
    RESET_MPIN = 'RESET_MPIN',
    CHANGE_PASSWORD = 'CHANGE_PASSWORD',
    CHANGE_WALLET_ACCESS_PIN = 'CHANGE_WALLET_ACCESS_PIN',
    CHANGE_PHONE_NO = 'CHANGE_PHONE_NO',
    FORGET_PASSWORD_API = 'FORGET_PASSWORD_API',
    REGISTER = 'REGISTER'
}

export enum VersionType {
    FORCE = 'FORCE',
    SKIP = 'SKIP',
    NORMAL = 'NORMAL'
}

export enum AppVersionType {
    ACTIVE = 'ACTIVE',
    INACTIVE = 'INACTIVE',
    DELETED = 'DELETED'
}

export enum UserChangeStatus {
    EMAIL_VERIFY = 'EMAIL_VERIFY',
    BLOCK = 'BLOCK',
    HIDE = 'HIDE',
    MUTE = 'MUTE',
    IGNORE = 'IGNORE',
    STORY_MUTE_PRIVACY = 'STORY_MUTE_PRIVACY',
    BIO_PRIVACY = 'BIO_PRIVACY',
    PROFILE_PIC_PRIVACY = 'PROFILE_PIC_PRIVACY',
    STORY_PRIVACY = 'STORY_PRIVACY',
    REPORT = 'REPORT',
    FOLLOW = 'FOLLOW',
    DISCONNECT = 'DISCONNECT',
    ADD_BANK_CARDS = 'ADD_BANK_CARDS',
    COMPLETE_KYC = 'COMPLETE_KYC',
    WALLET_UPGRADED = 'WALLET_UPGRADED',
    PROFILE_UPDATE = 'PROFILE_UPDATE'
}

export enum UserDeliveryStatus {
    UNDELIVERED = 'UNDELIVERED'
}

export enum ExceptionMessage {
    DEFAULT_MESSAGE = 'DEFAULT_MESSAGE',
    EMAIL_ALREADY_EXIST = 'EMAIL_ALREADY_EXIST',
    VERIFICATION_FAILED = 'VERIFICATION_FAILED',
    EMAIL_NOT_EXISTS = 'EMAIL_NOT_EXISTS',
    LOGIN_FAILED = 'LOGIN_FAILED',
    OTP_RETRY_ERROR = 'OTP_RETRY_ERROR',
    EMAIL_NOT_VERIFIED = 'EMAIL_NOT_VERIFIED',
    SOMETHING_WENT_WRONG = 'SOMETHING_WENT_WRONG',
    USER_NOT_EXISTS = 'USER_NOT_EXISTS',
    USER_ALREADY_EXIST = 'USER_ALREADY_EXIST',
    CAPTCHA_VERIFICATION_FAILED = 'CAPTCHA_VERIFICATION_FAILED',
    AUTH_INVALID_TOKEN = 'AUTH_INVALID_TOKEN',
    AUTH_INVALID_STRATEGY = 'AUTH_INVALID_STRATEGY',
    ACCOUNT_LOCKED = 'ACCOUNT_LOCKED',
    EMAIL_NOT_VERIFIED_COGNITO = 'EMAIL_NOT_VERIFIED_COGNITO',
    OTP_EXPIRED = 'OTP_EXPIRED',
    SESSION_NOT_FOUND = 'SESSION_NOT_FOUND',
    MAX_ATTEMPT_REACHED = 'MAX_ATTEMPT_REACHED',
    INVALID_REQUEST = 'INVALID_REQUEST',
    INCORRECT_OTP = 'INCORRECT_OTP',
    INVALID_APIKEY = 'INVALID_APIKEY',
    INVALID_NATIONAL_ID_FORMAT = 'INVALID_NATIONAL_ID_FORMAT',
    INVALID_NATIONAL_ID_SIGNUP = 'INVALID_NATIONAL_ID_SIGNUP',
    INVALID_IP77_PASSWORD = 'INVALID_IP77_PASSWORD',
    INVALID_OTP = 'INVALID_OTP',
    INVALID_PASSWORD = 'INVALID_PASSWORD',
    INVALID_EMAIL_TOKEN = 'INVALID_EMAIL_TOKEN',
    INVALID_MPIN = 'INVALID_MPIN',
    IMP_ERROR = 'IMP_ERROR',
    USER_NOT_REGISTERED = 'USER_NOT_REGISTERED',
    UNAUTHORIZED = 'UNAUTHORIZED',
    CANNOT_PERFORM_UPDATE_OPERATION = 'CANNOT_PERFORM_UPDATE_OPERATION',
    ADMIN_BLOCKED = 'ADMIN_BLOCKED',
    ADMIN_DELETED = 'ADMIN_DELETED',
    RESET_PASSWORD_EXPIRED = 'RESET_PASSWORD_EXPIRED',
    MOVED_PERMANENTLY = 'MOVED_PERMANENTLY',
    USER_BLOCKED = 'USER_BLOCKED',
    USER_NOT_FOUND = 'USER_NOT_FOUND',
    NATIONAL_ID_ALREADY_USED = 'NATIONAL_ID_ALREADY_USED',
    CONNECTION_NOT_FOUND = 'CONNECTION_NOT_FOUND',
    REQUIRED_MPIN = 'REQUIRED_MPIN',
    UNABLE_TO_PROCESS_REQUEST = 'UNABLE_TO_PROCESS_REQUEST',
    NOT_REGISTERED = 'NOT_REGISTERED',
    KYC_NOT_MATCHING_PHONE_MATCHING = 'KYC_NOT_MATCHING_PHONE_MATCHING',
    FAILED = 'FAILED',
    SUCCESS = 'SUCCESS',
    INVALID_CONNECTION_REQUEST = 'INVALID_CONNECTION_REQUEST',
    INVALID_ENV_NAME = 'INVALID_ENV_NAME'
}

export enum KycType {
    DAN = 'DAN',
    KHUR = 'KHUR',
    UNITEL = 'UNITEL'
}

export enum MongoDatabaseType {
    USER = 'USER',
    PAYMENT = 'PAYMENT',
    NOTIFICATION = 'NOTIFICATION',
    BUSINESS = 'BUSINESS'
}

export enum RedisClusterType {
    READ = 'READ',
    WRITE = 'WRITE'
}
